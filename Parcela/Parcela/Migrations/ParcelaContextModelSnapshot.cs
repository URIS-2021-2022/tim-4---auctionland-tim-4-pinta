// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Parcela.Entities;

namespace Parcela.Migrations
{
    [DbContext(typeof(ParcelaContext))]
    partial class ParcelaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Parcela.Entities.DeoParceleEntity", b =>
                {
                    b.Property<Guid>("DeoParceleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ParcelaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PovrsinaDelaParcele")
                        .HasColumnType("int");

                    b.Property<int>("RedniBroj")
                        .HasColumnType("int");

                    b.HasKey("DeoParceleID");

                    b.HasIndex("ParcelaID");

                    b.ToTable("DeloviParcela");

                    b.HasData(
                        new
                        {
                            DeoParceleID = new Guid("cae99a88-c6ee-4f4c-a463-419ac8fc1b85"),
                            ParcelaID = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c0"),
                            PovrsinaDelaParcele = 1000,
                            RedniBroj = 1
                        },
                        new
                        {
                            DeoParceleID = new Guid("2884b2b0-302c-4eac-847c-65e4c356132b"),
                            ParcelaID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e965b"),
                            PovrsinaDelaParcele = 2000,
                            RedniBroj = 2
                        });
                });

            modelBuilder.Entity("Parcela.Entities.KlasaEntity", b =>
                {
                    b.Property<Guid>("KlasaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("KlasaOznaka")
                        .HasColumnType("int");

                    b.HasKey("KlasaID");

                    b.ToTable("Klase");

                    b.HasData(
                        new
                        {
                            KlasaID = new Guid("829f5f3f-6159-4e15-ab52-d4c78ce944dc"),
                            KlasaOznaka = 1
                        },
                        new
                        {
                            KlasaID = new Guid("18227841-6ba9-4509-b8fa-faa8f6699b3b"),
                            KlasaOznaka = 2
                        });
                });

            modelBuilder.Entity("Parcela.Entities.KulturaEntity", b =>
                {
                    b.Property<Guid>("KulturaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KulturaNaziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KulturaID");

                    b.ToTable("Kulture");

                    b.HasData(
                        new
                        {
                            KulturaID = new Guid("149b65ca-47aa-433c-8dbe-cdcf5e74a4ed"),
                            KulturaNaziv = "Kukuruz"
                        },
                        new
                        {
                            KulturaID = new Guid("86f5706f-737b-4b20-beed-531aa64326cb"),
                            KulturaNaziv = "Soja"
                        });
                });

            modelBuilder.Entity("Parcela.Entities.OblikSvojineEntity", b =>
                {
                    b.Property<Guid>("OblikSvojineID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OblikSvojineNaziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OblikSvojineID");

                    b.ToTable("ObliciSvojine");

                    b.HasData(
                        new
                        {
                            OblikSvojineID = new Guid("0051339e-4bf1-4d63-89f9-d5f744016a2b"),
                            OblikSvojineNaziv = "Oblik svojine 1"
                        },
                        new
                        {
                            OblikSvojineID = new Guid("91a1f792-bc28-4f6e-bdda-cb577d7858fe"),
                            OblikSvojineNaziv = "Oblik svojine 2"
                        });
                });

            modelBuilder.Entity("Parcela.Entities.ObradivostEntity", b =>
                {
                    b.Property<Guid>("ObradivostID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ObradivostNaziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ObradivostID");

                    b.ToTable("Obradivosti");

                    b.HasData(
                        new
                        {
                            ObradivostID = new Guid("1fbc26e0-a797-45b8-bfb2-75d6799237ba"),
                            ObradivostNaziv = "Obradivost1"
                        },
                        new
                        {
                            ObradivostID = new Guid("bf45ffef-1166-44fb-a2e1-67824a6561f2"),
                            ObradivostNaziv = "Obradivost2"
                        });
                });

            modelBuilder.Entity("Parcela.Entities.OdvodnjavanjeEntity", b =>
                {
                    b.Property<Guid>("OdvodnjavanjeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OdvodnjavanjeNaziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OdvodnjavanjeID");

                    b.ToTable("Odvodnjavanja");

                    b.HasData(
                        new
                        {
                            OdvodnjavanjeID = new Guid("32cf50d2-ab1a-45fb-a5de-f6c4fd646775"),
                            OdvodnjavanjeNaziv = "Odvodnjavanje1"
                        },
                        new
                        {
                            OdvodnjavanjeID = new Guid("a2f44a7b-cdfb-4d69-b651-6d715afe8217"),
                            OdvodnjavanjeNaziv = "Odvodnjavanje2"
                        });
                });

            modelBuilder.Entity("Parcela.Entities.ParcelaEntity", b =>
                {
                    b.Property<Guid>("ParcelaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrojListaNepokretnosti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrojParcele")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("KatastarskaOpstinaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KlasaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KlasaStvarnoStanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("KulturaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("KulturaStvarnoStanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("KupacID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OblikSvojineID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ObradivostID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ObradivostStvarnoStanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("OdvodnjavanjeID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OdvodnjavanjeStvarnoStanje")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Povrsina")
                        .HasColumnType("int");

                    b.Property<Guid>("ZasticenaZonaID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ZasticenaZonaStvarnoStanje")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParcelaID");

                    b.HasIndex("KlasaID");

                    b.HasIndex("KulturaID");

                    b.HasIndex("OblikSvojineID");

                    b.HasIndex("ObradivostID");

                    b.HasIndex("OdvodnjavanjeID");

                    b.HasIndex("ZasticenaZonaID");

                    b.ToTable("Parcele");

                    b.HasData(
                        new
                        {
                            ParcelaID = new Guid("6a411c13-a195-48f7-8dbd-67596c3974c0"),
                            BrojListaNepokretnosti = "12345",
                            BrojParcele = "12345",
                            KatastarskaOpstinaID = new Guid("829f5f3f-6159-4e15-ab52-d4c78ce944dc"),
                            KlasaID = new Guid("829f5f3f-6159-4e15-ab52-d4c78ce944dc"),
                            KlasaStvarnoStanje = "Klasa1",
                            KulturaID = new Guid("149b65ca-47aa-433c-8dbe-cdcf5e74a4ed"),
                            KulturaStvarnoStanje = "Kukuruz",
                            KupacID = new Guid("829f5f3f-6159-4e15-ab52-d4c78ce944dc"),
                            OblikSvojineID = new Guid("0051339e-4bf1-4d63-89f9-d5f744016a2b"),
                            ObradivostID = new Guid("1fbc26e0-a797-45b8-bfb2-75d6799237ba"),
                            ObradivostStvarnoStanje = "Obradivost1",
                            OdvodnjavanjeID = new Guid("32cf50d2-ab1a-45fb-a5de-f6c4fd646775"),
                            OdvodnjavanjeStvarnoStanje = "Odvodnjavanje1",
                            Povrsina = 1000,
                            ZasticenaZonaID = new Guid("a873025a-b4bc-440d-8e65-dc63fb9025d7"),
                            ZasticenaZonaStvarnoStanje = "ZasticenaZona1"
                        },
                        new
                        {
                            ParcelaID = new Guid("1c7ea607-8ddb-493a-87fa-4bf5893e965b"),
                            BrojListaNepokretnosti = "54321",
                            BrojParcele = "54321",
                            KatastarskaOpstinaID = new Guid("829f5f3f-6159-4e15-ab52-d4c78ce944dc"),
                            KlasaID = new Guid("829f5f3f-6159-4e15-ab52-d4c78ce944dc"),
                            KlasaStvarnoStanje = "Klasa2",
                            KulturaID = new Guid("149b65ca-47aa-433c-8dbe-cdcf5e74a4ed"),
                            KulturaStvarnoStanje = "Soja",
                            KupacID = new Guid("829f5f3f-6159-4e15-ab52-d4c78ce944dc"),
                            OblikSvojineID = new Guid("0051339e-4bf1-4d63-89f9-d5f744016a2b"),
                            ObradivostID = new Guid("1fbc26e0-a797-45b8-bfb2-75d6799237ba"),
                            ObradivostStvarnoStanje = "Obradivost2",
                            OdvodnjavanjeID = new Guid("32cf50d2-ab1a-45fb-a5de-f6c4fd646775"),
                            OdvodnjavanjeStvarnoStanje = "Odvodnjavanje2",
                            Povrsina = 2000,
                            ZasticenaZonaID = new Guid("a873025a-b4bc-440d-8e65-dc63fb9025d7"),
                            ZasticenaZonaStvarnoStanje = "ZasticenaZona2"
                        });
                });

            modelBuilder.Entity("Parcela.Entities.ZasticenaZonaEntity", b =>
                {
                    b.Property<Guid>("ZasticenaZonaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ZasticenaZonaOznaka")
                        .HasColumnType("int");

                    b.HasKey("ZasticenaZonaID");

                    b.ToTable("ZasticeneZone");

                    b.HasData(
                        new
                        {
                            ZasticenaZonaID = new Guid("a873025a-b4bc-440d-8e65-dc63fb9025d7"),
                            ZasticenaZonaOznaka = 1
                        },
                        new
                        {
                            ZasticenaZonaID = new Guid("9eec3d7d-2f21-4719-a8db-415806748dfb"),
                            ZasticenaZonaOznaka = 2
                        });
                });

            modelBuilder.Entity("Parcela.Entities.DeoParceleEntity", b =>
                {
                    b.HasOne("Parcela.Entities.ParcelaEntity", "Parcela")
                        .WithMany("DeloviParcele")
                        .HasForeignKey("ParcelaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Parcela");
                });

            modelBuilder.Entity("Parcela.Entities.ParcelaEntity", b =>
                {
                    b.HasOne("Parcela.Entities.KlasaEntity", "Klasa")
                        .WithMany("Parcele")
                        .HasForeignKey("KlasaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parcela.Entities.KulturaEntity", "Kultura")
                        .WithMany("Parcele")
                        .HasForeignKey("KulturaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parcela.Entities.OblikSvojineEntity", "OblikSvojine")
                        .WithMany("Parcele")
                        .HasForeignKey("OblikSvojineID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parcela.Entities.ObradivostEntity", "Obradivost")
                        .WithMany("Parcele")
                        .HasForeignKey("ObradivostID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parcela.Entities.OdvodnjavanjeEntity", "Odvodnjavanje")
                        .WithMany("Parcele")
                        .HasForeignKey("OdvodnjavanjeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Parcela.Entities.ZasticenaZonaEntity", "ZasticenaZona")
                        .WithMany("Parcele")
                        .HasForeignKey("ZasticenaZonaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Klasa");

                    b.Navigation("Kultura");

                    b.Navigation("OblikSvojine");

                    b.Navigation("Obradivost");

                    b.Navigation("Odvodnjavanje");

                    b.Navigation("ZasticenaZona");
                });

            modelBuilder.Entity("Parcela.Entities.KlasaEntity", b =>
                {
                    b.Navigation("Parcele");
                });

            modelBuilder.Entity("Parcela.Entities.KulturaEntity", b =>
                {
                    b.Navigation("Parcele");
                });

            modelBuilder.Entity("Parcela.Entities.OblikSvojineEntity", b =>
                {
                    b.Navigation("Parcele");
                });

            modelBuilder.Entity("Parcela.Entities.ObradivostEntity", b =>
                {
                    b.Navigation("Parcele");
                });

            modelBuilder.Entity("Parcela.Entities.OdvodnjavanjeEntity", b =>
                {
                    b.Navigation("Parcele");
                });

            modelBuilder.Entity("Parcela.Entities.ParcelaEntity", b =>
                {
                    b.Navigation("DeloviParcele");
                });

            modelBuilder.Entity("Parcela.Entities.ZasticenaZonaEntity", b =>
                {
                    b.Navigation("Parcele");
                });
#pragma warning restore 612, 618
        }
    }
}
